external class NestedScrollView {
    construct 
    get controller
    get scrollDirection
    get reverse
    get physics
    get headerSliverBuilder
    get body
    get dragStartBehavior
    get floatHeaderSlivers
    get clipBehavior
    get restorationId
    fun createState
    static fun sliverOverlapAbsorberHandleFor (context)
}
external class NestedScrollViewState {
    construct
    get innerController
    get outerController
    fun initState
    fun didChangeDependencies
    fun didUpdateWidget
    fun dispose
    fun build
}
external class SliverOverlapAbsorberHandle {
    construct
    get layoutExtent
    get scrollExtent
    fun toString
}
external class SliverOverlapAbsorber {
    construct 
    get handle
    fun createRenderObject
    fun updateRenderObject
    fun debugFillProperties
}
external class RenderSliverOverlapAbsorber {
    construct 
    get handle
    set handle(value)
    fun attach
    fun detach
    fun performLayout
    fun applyPaintTransform
    fun hitTestChildren
    fun paint
    fun debugFillProperties
}
external class SliverOverlapInjector {
    construct 
    get handle
    fun createRenderObject
    fun updateRenderObject
    fun debugFillProperties
}
external class RenderSliverOverlapInjector {
    construct 
    get handle
    set handle(value)
    fun attach
    fun detach
    fun performLayout
    fun debugPaint
    fun debugFillProperties
}
external class NestedScrollViewViewport {
    construct 
    get handle
    fun createRenderObject
    fun updateRenderObject
    fun debugFillProperties
}
external class RenderNestedScrollViewViewport {
    construct 
    get handle
    set handle(value)
    fun markNeedsLayout
    fun debugFillProperties
}
